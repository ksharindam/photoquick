name: Windows

on:
  push: {}
  pull_request: {}

env:
  VERSION: 2.0.0
  PROJECT_NAME: "PhotoQuick"
  QT_VERSION: 5.15.0
  MSC_VERSION: "vc142"

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
              name: "Windows Latest x64 Debug",
              os: windows-latest,
              arch: "x64",
              artifact: "Windows-x64-Debug",
              msvc: win64_msvc2019_64,
              build_type: "Debug",
              cmake_generator: '-G "Visual Studio 16 2019" -A x64',
              cmake_build_args: "/M",
              vs_env_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            }
          - {
              name: "Windows Latest x64 Release",
              os: windows-latest,
              arch: "x64",
              artifact: "Windows-x64-Release",
              msvc: win64_msvc2019_64,
              build_type: "Release",
              cmake_generator: '-G "Visual Studio 16 2019" -A x64',
              cmake_build_args: "/M",
              vs_env_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            }
          - {
              name: "Windows Latest x86 Debug",
              os: windows-latest,
              arch: "x86",
              artifact: "Windows-x86-Debug",
              msvc: win32_msvc2019,
              build_type: "Debug",
              cmake_generator: '-G "Visual Studio 16 2019" -A Win32',
              cmake_build_args: "/M",
              vs_env_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars32.bat",
            }
          - {
              name: "Windows Latest x86 Release",
              os: windows-latest,
              arch: "x86",
              artifact: "Windows-x86-Release",
              msvc: win32_msvc2019,
              build_type: "Release",
              cmake_generator: '-G "Visual Studio 16 2019" -A Win32',
              cmake_build_args: "/M",
              vs_env_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars32.bat",
            }

    steps:
      - uses: actions/checkout@v2

      - name: Install conan Packge-Manager
        id: install_pm
        run: |
          pip install conan
          conan -v
          conan profile new default --detect --force
          conan remote add bincrafters https://api.bintray.com/conan/bincrafters/public-conan

      - name: Download Qt modules
        id: qt
        uses: jurplel/install-qt-action@v2
        with:
          version: "${{ env.QT_VERSION }}"
          modules: core gui widgets
          arch: "${{ matrix.config.msvc }}"

      - name: CMake configure
        id: cmake_configure
        run: |
          mkdir build && cd build
          cmake .. ${{ matrix.config.cmake_generator }} -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}

      - name: CMake build
        id: cmake_build
        run: |
          cd build
          cmake --build . --config ${{ matrix.config.build_type }} -- ${{ matrix.config.cmake_build_args }}

      - name: Prepare standalone deployment
        id: prepare_standalone
        run: |
          windeployqt ./build/bin/

      - name: Prepare installers deployment
        id: prepare_installers
        if: ${{ matrix.config.build_type == 'Release' }}
        run: |
          cd source\PhotoQuickInstaller\Windows\${{ matrix.config.arch }}

          # Download binarycreator, since there is no package for this yet.
          echo "Downloading Qt's binarycreator..."
          curl -L "https://drive.google.com/uc?export=download&id=1ubrrAB3NfJ5G9IBe2Ed4_4oWQtmmAuJC" -o .\bin.zip
          tar -xf .\bin.zip

          .\create.bat

      - name: Upload standalone artifacts
        id: upload_standalone_artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT_NAME }}-${{ matrix.config.artifact }}
          path: ./build/bin/

      - name: Upload installer artifacts
        id: upload_installer_artifacts
        uses: actions/upload-artifact@v2
        if: ${{ matrix.config.build_type == 'Release' }}
        with:
          name: ${{ env.PROJECT_NAME }}Setup_${{ matrix.config.arch }}_${{ env.VERSION }}
          path: ./source/PhotoQuickInstaller/Windows/${{ matrix.config.arch }}/${{ env.PROJECT_NAME }}Setup_${{ matrix.config.arch }}_${{ env.VERSION }}.exe
